<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="Jagdamba" failures="0" tests="11" name="Default test" time="0.426" errors="0" timestamp="2023-03-16T23:56:37 IST">
  <testcase classname="testPackage.BaseClass" name="@BeforeTest beforetest" time="-1.678991196438E9">
    <failure type="org.testng.TestNGException" message="
Parameter &amp;apos;browser&amp;apos; is required by BeforeTest on method beforetest but has not been marked @Optional or defined
in C:\Users\MY WORLD\AppData\Local\Temp\testng-eclipse--1860159447\testng-customsuite.xml">
      <![CDATA[org.testng.TestNGException: 
Parameter 'browser' is required by BeforeTest on method beforetest but has not been marked @Optional or defined
in C:\Users\MY WORLD\AppData\Local\Temp\testng-eclipse--1860159447\testng-customsuite.xml
at org.testng.internal.Parameters.createParams(Parameters.java:270)
at org.testng.internal.Parameters.createParametersForMethod(Parameters.java:358)
at org.testng.internal.Parameters.createParameters(Parameters.java:700)
at org.testng.internal.Parameters.createConfigurationParameters(Parameters.java:168)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:302)
at org.testng.TestRunner.invokeTestConfigurations(TestRunner.java:637)
at org.testng.TestRunner.beforeRun(TestRunner.java:627)
at org.testng.TestRunner.run(TestRunner.java:589)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @BeforeTest beforetest -->
  <testcase classname="testPackage.TestNinja" name="@BeforeClass beforeClass" time="-1.678991196566E9">
    <skipped/>
  </testcase> <!-- @BeforeClass beforeClass -->
  <testcase classname="testPackage.TestNinja" name="@BeforeMethod beforeMethod" time="-1.678991196607E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="testPackage.BaseClass" name="@AfterMethod aftermethod" time="-1.678991196632E9">
    <skipped/>
  </testcase> <!-- @AfterMethod aftermethod -->
  <testcase classname="testPackage.TestNinja" name="@BeforeMethod beforeMethod" time="-1.678991196648E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="testPackage.BaseClass" name="@AfterMethod aftermethod" time="-1.678991196662E9">
    <skipped/>
  </testcase> <!-- @AfterMethod aftermethod -->
  <testcase classname="testPackage.TestNinja" name="@BeforeMethod beforeMethod" time="-1.678991196669E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="testPackage.BaseClass" name="@AfterMethod aftermethod" time="-1.678991196691E9">
    <skipped/>
  </testcase> <!-- @AfterMethod aftermethod -->
  <testcase classname="testPackage.TestNinja" name="@BeforeMethod beforeMethod" time="-1.678991196699E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="testPackage.BaseClass" name="@AfterMethod aftermethod" time="-1.678991196721E9">
    <skipped/>
  </testcase> <!-- @AfterMethod aftermethod -->
  <testcase classname="testPackage.TestNinja" name="@AfterClass afterClass" time="-1.678991196831E9">
    <skipped/>
  </testcase> <!-- @AfterClass afterClass -->
  <testcase classname="testPackage.BaseClass" name="@AfterTest aftertest" time="-1.67899119684E9">
    <skipped/>
  </testcase> <!-- @AfterTest aftertest -->
  <testcase classname="testPackage.TestNinja" name="checkmyaccount" time="0.0">
    <skipped/>
  </testcase> <!-- checkmyaccount -->
  <testcase classname="testPackage.TestNinja" name="register" time="0.0">
    <skipped/>
  </testcase> <!-- register -->
  <testcase classname="testPackage.TestNinja" name="elementweb" time="0.0">
    <skipped/>
  </testcase> <!-- elementweb -->
  <testcase classname="testPackage.TestNinja" name="firstname" time="0.0">
    <skipped/>
  </testcase> <!-- firstname -->
  <testcase classname="testPackage.TestNinja" name="emailbox" time="0.0">
    <skipped/>
  </testcase> <!-- emailbox -->
  <testcase classname="testPackage.TestNinja" name="verifytelephone" time="0.0">
    <skipped/>
  </testcase> <!-- verifytelephone -->
  <testcase classname="testPackage.TestNinja" name="passverify" time="0.0">
    <skipped/>
  </testcase> <!-- passverify -->
  <testcase classname="testPackage.TestNinja" name="confpass" time="0.0">
    <skipped/>
  </testcase> <!-- confpass -->
  <testcase classname="testPackage.TestNinja" name="checkboxyes" time="0.0">
    <skipped/>
  </testcase> <!-- checkboxyes -->
  <testcase classname="testPackage.TestNinja" name="checkboxno" time="0.0">
    <skipped/>
  </testcase> <!-- checkboxno -->
  <testcase classname="testPackage.TestNinja" name="policybox" time="0.0">
    <skipped/>
  </testcase> <!-- policybox -->
</testsuite> <!-- Default test -->
